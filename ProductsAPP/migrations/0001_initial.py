# Generated by Django 5.2.1 on 2025-05-13 08:15

import django.core.files.storage
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Consumible',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/media/', location='C:\\Users\\mikel.zabaleta\\Github\\TPV\\media'), upload_to='', verbose_name='Image')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Name')),
                ('comments', models.TextField(verbose_name='Comments')),
                ('cost', models.FloatField(help_text='Cost of one unit', verbose_name='Unitary cost')),
                ('pvp', models.FloatField(help_text='Price of one unit', verbose_name='Selling price')),
                ('order_quantity', models.FloatField(default=10, help_text='Determines the minimum quantity that can be sourced from supplier', verbose_name='Minimum order quantity')),
                ('stock', models.FloatField(blank=True, help_text='Quantity in stock currently', null=True, verbose_name='Current stock')),
                ('stock_min', models.FloatField(blank=True, help_text='Quantity in stock that will require a new purchase order', null=True, verbose_name='Minimum stock')),
                ('generates_product', models.BooleanField(default=False, verbose_name='Can be directly sold')),
                ('infinite', models.BooleanField(default=False, verbose_name='Infinite consumable')),
            ],
            options={
                'verbose_name': 'Consumable',
                'verbose_name_plural': 'Consumables',
            },
        ),
        migrations.CreateModel(
            name='ProductFamily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/media/', location='C:\\Users\\mikel.zabaleta\\Github\\TPV\\media'), upload_to='', verbose_name='Image')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='Name')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='BillAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(editable=False, max_length=20)),
                ('date', models.DateField(auto_now_add=True, verbose_name='Fecha')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Abierta'), (1, 'Cerrada sin pago confirmado'), (2, 'Cerrada y confirmada')], default=0, editable=False, verbose_name='Estado')),
                ('owner', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='owner', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CombinationPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(default=1, verbose_name='Cantidad')),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ingredient', to='ProductsAPP.consumible', verbose_name='Consumible')),
            ],
            options={
                'verbose_name': 'Combinación de consumible',
                'verbose_name_plural': 'Combinación de consumibles',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(blank=True, null=True, storage=django.core.files.storage.FileSystemStorage(base_url='/media/', location='C:\\Users\\mikel.zabaleta\\Github\\TPV\\media'), upload_to='', verbose_name='Imagen del producto')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Nombre del producto')),
                ('details', models.TextField(verbose_name='Details')),
                ('single_ingredient', models.BooleanField(default=False, verbose_name='Es un producto de consumible')),
                ('manual_pvp', models.FloatField(blank=True, help_text='Precio de venta de una unidad', null=True, verbose_name='Precio de venta')),
                ('ingredients', models.ManyToManyField(blank=True, through='ProductsAPP.CombinationPosition', to='ProductsAPP.consumible')),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family', to='ProductsAPP.productfamily')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='combinationposition',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resultant_product', to='ProductsAPP.product'),
        ),
        migrations.CreateModel(
            name='BillPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.SmallIntegerField(blank=True, null=True, verbose_name='Posicion')),
                ('quantity', models.PositiveSmallIntegerField(default=1, verbose_name='Cantidad')),
                ('bill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bill', to='ProductsAPP.billaccount')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='ProductsAPP.product')),
            ],
            options={
                'unique_together': {('bill', 'product')},
            },
        ),
        migrations.AddField(
            model_name='billaccount',
            name='positions',
            field=models.ManyToManyField(blank=True, through='ProductsAPP.BillPosition', to='ProductsAPP.product'),
        ),
        migrations.AddField(
            model_name='consumible',
            name='family',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consumible_family', to='ProductsAPP.productfamily', verbose_name='Family'),
        ),
    ]
